// Code generated by MockGen. DO NOT EDIT.
// Source: page.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/yungen-lu/shared-key-value-list-system/internal/domain"
)

// MockPageRepo is a mock of PageRepo interface.
type MockPageRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPageRepoMockRecorder
}

// MockPageRepoMockRecorder is the mock recorder for MockPageRepo.
type MockPageRepoMockRecorder struct {
	mock *MockPageRepo
}

// NewMockPageRepo creates a new mock instance.
func NewMockPageRepo(ctrl *gomock.Controller) *MockPageRepo {
	mock := &MockPageRepo{ctrl: ctrl}
	mock.recorder = &MockPageRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPageRepo) EXPECT() *MockPageRepoMockRecorder {
	return m.recorder
}

// DeleteByID mocks base method.
func (m *MockPageRepo) DeleteByID(ctx context.Context, id int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByID", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByID indicates an expected call of DeleteByID.
func (mr *MockPageRepoMockRecorder) DeleteByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByID", reflect.TypeOf((*MockPageRepo)(nil).DeleteByID), ctx, id)
}

// GetAll mocks base method.
func (m *MockPageRepo) GetAll(ctx context.Context) ([]domain.Page, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]domain.Page)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockPageRepoMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPageRepo)(nil).GetAll), ctx)
}

// GetByID mocks base method.
func (m *MockPageRepo) GetByID(ctx context.Context, id int32) (domain.Page, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(domain.Page)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockPageRepoMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockPageRepo)(nil).GetByID), ctx, id)
}

// Store mocks base method.
func (m *MockPageRepo) Store(ctx context.Context, page domain.Page) (int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", ctx, page)
	ret0, _ := ret[0].(int32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Store indicates an expected call of Store.
func (mr *MockPageRepoMockRecorder) Store(ctx, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockPageRepo)(nil).Store), ctx, page)
}
