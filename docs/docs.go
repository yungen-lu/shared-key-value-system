// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/head": {
            "get": {
                "description": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all heads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.List"
                            }
                        }
                    }
                }
            }
        },
        "/head/{id}": {
            "get": {
                "description": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a head by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Head ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.List"
                        }
                    }
                }
            }
        },
        "/page": {
            "get": {
                "description": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all pages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Page"
                            }
                        }
                    }
                }
            }
        },
        "/page/{id}": {
            "get": {
                "description": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Page"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Article": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/domain.User"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "description": "TODO",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "$ref": "#/definitions/domain.Topic"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domain.List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nextPageID": {
                    "type": "integer"
                },
                "pageCount": {
                    "type": "integer"
                }
            }
        },
        "domain.Page": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Article"
                    }
                },
                "id": {
                    "description": "key",
                    "type": "integer"
                },
                "nextPageID": {
                    "type": "integer"
                }
            }
        },
        "domain.Topic": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "newestList": {
                    "$ref": "#/definitions/domain.List"
                },
                "popularList": {
                    "$ref": "#/definitions/domain.List"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "personalList": {
                    "$ref": "#/definitions/domain.List"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Shared Key Value List System API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
